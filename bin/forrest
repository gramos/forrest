#!/usr/bin/env ruby
require 'ftools'
require 'rubygems'
require 'test/unit/ui/console/testrunner'

require File.join(File.dirname(__FILE__), '../lib/object')
require File.join(File.dirname(__FILE__), '../lib/forrest/unix_console_styler')
require File.join(File.dirname(__FILE__), '../lib/forrest/runner')
require File.join(File.dirname(__FILE__), '../lib/forrest/scenario_runner')

# --------------------------------------------------------------------------

def colorize(text, color)
  "#{UnixConsoleStyler::STYLE[color]}#{text}\e[0m"
end

def print_test_cases(test_cases)
  test_cases.each{|tc|
    tests = tc.suite.tests
    puts "\n+ #{colorize(tc, :bold)}"
    tests.each{|t|
      puts "|__ #{colorize(tc, :cyan)}##{colorize(t.method_name, :yellow)}"

    }
  }
end

def test_class
  if @running == 'scenario'
    @test_class = ARGV[0].split("#")[0].constantize
  else
    @test_class = File.basename(@test_file, ".rb").camelize.constantize
  end
end

def test_file_from_arg
  ARGV[0].split("#")[0].split("::")[0].underscore
end

def test_name
  @test_name  = ARGV[0].split("#")[1]
end

def test_cases
  test_class.subclasses
end

def extract_scenario(arg)
  scenario = test_class.suite.tests.find{|sc|
    sc.method_name == test_name
  }
  scenario
end

def run_scenario(arg)
  @running = 'scenario'
  puts "==> Runing scenario...\n\n"
  require "config/environment"
  puts "requiring #{test_file_from_arg}"
  require "test/stories/#{test_file_from_arg}"

  puts extract_scenario(arg).inspect
  Stories::ForrestScenarioRunner.run(extract_scenario(arg))
  # Test::Unit::UI::Console::TestRunner.run(extract_scenario(arg))
end

def show(test_file)
  puts "==> Printing all stories/scenarios...\n\n"
  require test_file
  print_test_cases(test_cases)

  begin
    Test::Unit::UI::Console::TestRunner.run(nil)
  rescue NoMethodError
  end
end

# ------------------------------------------------------------------------------

if File.file?(@test_file = ARGV[0])
  @running = ''
  show(@test_file)
else
  if ARGV[0].include? "#"
    run_scenario(ARGV[0])
  else
    run_story
  end
end


